task auth {

  doLast {
    print('aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 990223444407.dkr.ecr.us-west-2.amazonaws.com')
    exec {
      commandLine "bash", "-c", "aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 990223444407.dkr.ecr.us-west-2.amazonaws.com"
    }
  }
}

task deployApi {
  dependsOn ':model:build'
  dependsOn ':api:test'
  dependsOn ':api:shadowJar'

  dependsOn ':auth'

  String ver = project.getProperty('version') != 'unspecified' ? project.getProperty('version') : "local-" + new Date().getTime()

  String registry = "990223444407.dkr.ecr.us-west-2.amazonaws.com"
  String tag = "${registry}/bingematch-api:${ver}"

  doLast {

    println("Deploying version ${ver}")

    exec {
      commandLine "bash", "-c", "docker build -t ${tag} api"
    }
    exec {
      commandLine "bash", "-c", "docker push ${tag}"
    }

    def contents = new File('deploy/api-deployment.yaml').getText('UTF-8')
            .replaceAll("VERSION", "${ver}")

    def tmpDeploy = new File("/tmp/api-deployment-${ver}.yaml")
    tmpDeploy.write(contents, 'UTF-8')

    exec {
      commandLine "bash", "-c", "kubectl apply -f ${tmpDeploy.absolutePath}"
    }
  }
}

//task deployUi {
//  dependsOn ':auth'
//
//  doLast {
//    exec {
//      commandLine "docker build -t bingewatch-ui .".split(' ')
//    }
//    exec {
//      commandLine "docker tag bingematch-ui:latest 990223444407.dkr.ecr.us-west-2.amazonaws.com/bingematch-ui:latest".split(' ')
//    }
//    exec {
//      commandLine "docker push 990223444407.dkr.ecr.us-west-2.amazonaws.com/bingematch-ui:latest".split(' ')
//    }
//  }
//}

task deploy {
  //dependsOn deployUi
  dependsOn deployApi

  doLast {
    exec {
      commandLine "kubectl apply -f deploy/".split(' ')
    }
  }
}

