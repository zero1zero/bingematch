{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/zack/src/bingeflip/ui/swipe/Deck.tsx\";\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CardStack, { Card } from 'react-native-card-stack-swiper';\nimport styles from \"./styles\";\nimport YesNo from \"./yesno\";\n\nvar Deck = function Deck(props) {\n  var empty = React.createElement(Text, {\n    style: {\n      fontWeight: '700',\n      fontSize: 18,\n      color: 'gray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, \"No more cards :(\");\n  var stack = new CardStack({\n    style: styles.content,\n    renderNoMoreCards: function renderNoMoreCards() {\n      return empty;\n    },\n    onSwiped: function onSwiped() {\n      return console.log('onSwiped');\n    },\n    onSwipedLeft: function onSwipedLeft() {\n      return console.log('onSwipedLeft');\n    }\n  });\n  var t = React.createElement(CardStack, {\n    style: styles.content,\n    renderNoMoreCards: function renderNoMoreCards() {\n      return empty;\n    },\n    onSwiped: function onSwiped() {\n      return console.log('onSwiped');\n    },\n    onSwipedLeft: function onSwipedLeft() {\n      return console.log('onSwipedLeft');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Card, {\n    style: [styles.card, styles.card1],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 51\n    }\n  }, \"A\")), React.createElement(Card, {\n    style: [styles.card, styles.card2],\n    onSwipedLeft: function onSwipedLeft() {\n      return alert('onSwipedLeft');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 94\n    }\n  }, \"B\")), React.createElement(Card, {\n    style: [styles.card, styles.card1],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 51\n    }\n  }, \"C\")), React.createElement(Card, {\n    style: [styles.card, styles.card2],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 51\n    }\n  }, \"D\")), React.createElement(Card, {\n    style: [styles.card, styles.card1],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 51\n    }\n  }, \"E\")));\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, stack, React.createElement(YesNo, {\n    swiper: stack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Deck;","map":{"version":3,"sources":["/Users/zack/src/bingeflip/ui/swipe/Deck.tsx"],"names":["React","CardStack","Card","styles","YesNo","Deck","props","empty","fontWeight","fontSize","color","stack","style","content","renderNoMoreCards","onSwiped","console","log","onSwipedLeft","t","card","card1","label","card2","alert","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    StyleSheet,\n    Text,\n    View,\n    TouchableOpacity,\n    Image,\n} from 'react-native';\nimport CardStack, {Card, CardStackProps} from 'react-native-card-stack-swiper';\nimport styles from './styles'\nimport YesNo from \"./yesno\";\n\nexport interface Props {\n}\n\nconst Deck : React.FC<Props> = (props) => {\n\n    let empty = <Text style={{ fontWeight: '700', fontSize: 18, color: 'gray' }}>No more cards :(</Text>\n\n    let stack =\n        new CardStack({\n            style : styles.content,\n            renderNoMoreCards : () => empty,\n            onSwiped: () => console.log('onSwiped'),\n            onSwipedLeft:() => console.log('onSwipedLeft')\n        })\n\n        let t =\n        <CardStack\n        style={styles.content}\n        renderNoMoreCards={() => empty}\n        onSwiped={() => console.log('onSwiped')}\n        onSwipedLeft={() => console.log('onSwipedLeft')}\n    >\n        <Card style={[styles.card, styles.card1]}><Text style={styles.label}>A</Text></Card>\n        <Card style={[styles.card, styles.card2]} onSwipedLeft={() => alert('onSwipedLeft')}><Text style={styles.label}>B</Text></Card>\n        <Card style={[styles.card, styles.card1]}><Text style={styles.label}>C</Text></Card>\n        <Card style={[styles.card, styles.card2]}><Text style={styles.label}>D</Text></Card>\n        <Card style={[styles.card, styles.card1]}><Text style={styles.label}>E</Text></Card>\n    </CardStack>\n\n    return (\n        <View style={{ flex: 1 }}>\n\n            {stack}\n\n            <YesNo swiper={stack} />\n        </View>\n    );\n}\n\nexport default Deck;\n\n"]},"metadata":{},"sourceType":"module"}