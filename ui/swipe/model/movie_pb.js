// source: movie.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.movie.Detail', null, global);
goog.exportSymbol('proto.movie.Detail.Status', null, global);
goog.exportSymbol('proto.movie.Genre', null, global);
goog.exportSymbol('proto.movie.Image', null, global);
goog.exportSymbol('proto.movie.Video', null, global);
goog.exportSymbol('proto.movie.Video.Type', null, global);
goog.exportSymbol('proto.movie.Votes', null, global);
goog.exportSymbol('proto.movie.Watch', null, global);
goog.exportSymbol('proto.movie.Watch.Provider', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.movie.Detail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.movie.Detail.repeatedFields_, null);
};
goog.inherits(proto.movie.Detail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.movie.Detail.displayName = 'proto.movie.Detail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.movie.Genre = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.movie.Genre, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.movie.Genre.displayName = 'proto.movie.Genre';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.movie.Votes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.movie.Votes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.movie.Votes.displayName = 'proto.movie.Votes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.movie.Video = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.movie.Video, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.movie.Video.displayName = 'proto.movie.Video';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.movie.Image = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.movie.Image, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.movie.Image.displayName = 'proto.movie.Image';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.movie.Watch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.movie.Watch.repeatedFields_, null);
};
goog.inherits(proto.movie.Watch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.movie.Watch.displayName = 'proto.movie.Watch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.movie.Watch.Provider = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.movie.Watch.Provider, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.movie.Watch.Provider.displayName = 'proto.movie.Watch.Provider';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.movie.Detail.repeatedFields_ = [4,15,16,17,18,19,20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.movie.Detail.prototype.toObject = function(opt_includeInstance) {
  return proto.movie.Detail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.movie.Detail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movie.Detail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    overview: jspb.Message.getFieldWithDefault(msg, 3, ""),
    genresList: jspb.Message.toObjectList(msg.getGenresList(),
    proto.movie.Genre.toObject, includeInstance),
    originallanguage: jspb.Message.getFieldWithDefault(msg, 5, ""),
    originaltitle: jspb.Message.getFieldWithDefault(msg, 6, ""),
    posterpath: jspb.Message.getFieldWithDefault(msg, 7, ""),
    backdroppath: jspb.Message.getFieldWithDefault(msg, 8, ""),
    votes: (f = msg.getVotes()) && proto.movie.Votes.toObject(includeInstance, f),
    releasedate: jspb.Message.getFieldWithDefault(msg, 10, ""),
    popularity: jspb.Message.getFieldWithDefault(msg, 11, 0),
    tagline: jspb.Message.getFieldWithDefault(msg, 12, ""),
    imdbid: jspb.Message.getFieldWithDefault(msg, 13, ""),
    status: jspb.Message.getFieldWithDefault(msg, 14, 0),
    spokenlanguageList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    videosList: jspb.Message.toObjectList(msg.getVideosList(),
    proto.movie.Video.toObject, includeInstance),
    postersList: jspb.Message.toObjectList(msg.getPostersList(),
    proto.movie.Image.toObject, includeInstance),
    recommendationsList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
    similarList: (f = jspb.Message.getRepeatedField(msg, 19)) == null ? undefined : f,
    watchList: jspb.Message.toObjectList(msg.getWatchList(),
    proto.movie.Watch.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.movie.Detail}
 */
proto.movie.Detail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.movie.Detail;
  return proto.movie.Detail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.movie.Detail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.movie.Detail}
 */
proto.movie.Detail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOverview(value);
      break;
    case 4:
      var value = new proto.movie.Genre;
      reader.readMessage(value,proto.movie.Genre.deserializeBinaryFromReader);
      msg.addGenres(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginallanguage(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginaltitle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPosterpath(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackdroppath(value);
      break;
    case 9:
      var value = new proto.movie.Votes;
      reader.readMessage(value,proto.movie.Votes.deserializeBinaryFromReader);
      msg.setVotes(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setReleasedate(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPopularity(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setTagline(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setImdbid(value);
      break;
    case 14:
      var value = /** @type {!proto.movie.Detail.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.addSpokenlanguage(value);
      break;
    case 16:
      var value = new proto.movie.Video;
      reader.readMessage(value,proto.movie.Video.deserializeBinaryFromReader);
      msg.addVideos(value);
      break;
    case 17:
      var value = new proto.movie.Image;
      reader.readMessage(value,proto.movie.Image.deserializeBinaryFromReader);
      msg.addPosters(value);
      break;
    case 18:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setRecommendationsList(value);
      break;
    case 19:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setSimilarList(value);
      break;
    case 20:
      var value = new proto.movie.Watch;
      reader.readMessage(value,proto.movie.Watch.deserializeBinaryFromReader);
      msg.addWatch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.movie.Detail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.movie.Detail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.movie.Detail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movie.Detail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOverview();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGenresList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.movie.Genre.serializeBinaryToWriter
    );
  }
  f = message.getOriginallanguage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOriginaltitle();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPosterpath();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBackdroppath();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getVotes();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.movie.Votes.serializeBinaryToWriter
    );
  }
  f = message.getReleasedate();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPopularity();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getTagline();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getImdbid();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getSpokenlanguageList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      15,
      f
    );
  }
  f = message.getVideosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.movie.Video.serializeBinaryToWriter
    );
  }
  f = message.getPostersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.movie.Image.serializeBinaryToWriter
    );
  }
  f = message.getRecommendationsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      18,
      f
    );
  }
  f = message.getSimilarList();
  if (f.length > 0) {
    writer.writePackedInt32(
      19,
      f
    );
  }
  f = message.getWatchList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      20,
      f,
      proto.movie.Watch.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.movie.Detail.Status = {
  RUMORED: 0,
  PLANNED: 1,
  INPRODUCTION: 2,
  POSTPRODUCTION: 3,
  RELEASED: 4,
  CANCELED: 5
};

/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.movie.Detail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.movie.Detail.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.movie.Detail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.movie.Detail.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string overview = 3;
 * @return {string}
 */
proto.movie.Detail.prototype.getOverview = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.movie.Detail.prototype.setOverview = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Genre genres = 4;
 * @return {!Array<!proto.movie.Genre>}
 */
proto.movie.Detail.prototype.getGenresList = function() {
  return /** @type{!Array<!proto.movie.Genre>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.movie.Genre, 4));
};


/** @param {!Array<!proto.movie.Genre>} value */
proto.movie.Detail.prototype.setGenresList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.movie.Genre=} opt_value
 * @param {number=} opt_index
 * @return {!proto.movie.Genre}
 */
proto.movie.Detail.prototype.addGenres = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.movie.Genre, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.movie.Detail.prototype.clearGenresList = function() {
  this.setGenresList([]);
};


/**
 * optional string originalLanguage = 5;
 * @return {string}
 */
proto.movie.Detail.prototype.getOriginallanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.movie.Detail.prototype.setOriginallanguage = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string originalTitle = 6;
 * @return {string}
 */
proto.movie.Detail.prototype.getOriginaltitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.movie.Detail.prototype.setOriginaltitle = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string posterPath = 7;
 * @return {string}
 */
proto.movie.Detail.prototype.getPosterpath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.movie.Detail.prototype.setPosterpath = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string backdropPath = 8;
 * @return {string}
 */
proto.movie.Detail.prototype.getBackdroppath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.movie.Detail.prototype.setBackdroppath = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional Votes votes = 9;
 * @return {?proto.movie.Votes}
 */
proto.movie.Detail.prototype.getVotes = function() {
  return /** @type{?proto.movie.Votes} */ (
    jspb.Message.getWrapperField(this, proto.movie.Votes, 9));
};


/** @param {?proto.movie.Votes|undefined} value */
proto.movie.Detail.prototype.setVotes = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.movie.Detail.prototype.clearVotes = function() {
  this.setVotes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.movie.Detail.prototype.hasVotes = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string releaseDate = 10;
 * @return {string}
 */
proto.movie.Detail.prototype.getReleasedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.movie.Detail.prototype.setReleasedate = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 popularity = 11;
 * @return {number}
 */
proto.movie.Detail.prototype.getPopularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.movie.Detail.prototype.setPopularity = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string tagline = 12;
 * @return {string}
 */
proto.movie.Detail.prototype.getTagline = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.movie.Detail.prototype.setTagline = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string imdbId = 13;
 * @return {string}
 */
proto.movie.Detail.prototype.getImdbid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.movie.Detail.prototype.setImdbid = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional Status status = 14;
 * @return {!proto.movie.Detail.Status}
 */
proto.movie.Detail.prototype.getStatus = function() {
  return /** @type {!proto.movie.Detail.Status} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {!proto.movie.Detail.Status} value */
proto.movie.Detail.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 14, value);
};


/**
 * repeated string spokenLanguage = 15;
 * @return {!Array<string>}
 */
proto.movie.Detail.prototype.getSpokenlanguageList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 15));
};


/** @param {!Array<string>} value */
proto.movie.Detail.prototype.setSpokenlanguageList = function(value) {
  jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.movie.Detail.prototype.addSpokenlanguage = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.movie.Detail.prototype.clearSpokenlanguageList = function() {
  this.setSpokenlanguageList([]);
};


/**
 * repeated Video videos = 16;
 * @return {!Array<!proto.movie.Video>}
 */
proto.movie.Detail.prototype.getVideosList = function() {
  return /** @type{!Array<!proto.movie.Video>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.movie.Video, 16));
};


/** @param {!Array<!proto.movie.Video>} value */
proto.movie.Detail.prototype.setVideosList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.movie.Video=} opt_value
 * @param {number=} opt_index
 * @return {!proto.movie.Video}
 */
proto.movie.Detail.prototype.addVideos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.movie.Video, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.movie.Detail.prototype.clearVideosList = function() {
  this.setVideosList([]);
};


/**
 * repeated Image posters = 17;
 * @return {!Array<!proto.movie.Image>}
 */
proto.movie.Detail.prototype.getPostersList = function() {
  return /** @type{!Array<!proto.movie.Image>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.movie.Image, 17));
};


/** @param {!Array<!proto.movie.Image>} value */
proto.movie.Detail.prototype.setPostersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.movie.Image=} opt_value
 * @param {number=} opt_index
 * @return {!proto.movie.Image}
 */
proto.movie.Detail.prototype.addPosters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.movie.Image, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.movie.Detail.prototype.clearPostersList = function() {
  this.setPostersList([]);
};


/**
 * repeated int32 recommendations = 18;
 * @return {!Array<number>}
 */
proto.movie.Detail.prototype.getRecommendationsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 18));
};


/** @param {!Array<number>} value */
proto.movie.Detail.prototype.setRecommendationsList = function(value) {
  jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.movie.Detail.prototype.addRecommendations = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.movie.Detail.prototype.clearRecommendationsList = function() {
  this.setRecommendationsList([]);
};


/**
 * repeated int32 similar = 19;
 * @return {!Array<number>}
 */
proto.movie.Detail.prototype.getSimilarList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 19));
};


/** @param {!Array<number>} value */
proto.movie.Detail.prototype.setSimilarList = function(value) {
  jspb.Message.setField(this, 19, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.movie.Detail.prototype.addSimilar = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.movie.Detail.prototype.clearSimilarList = function() {
  this.setSimilarList([]);
};


/**
 * repeated Watch watch = 20;
 * @return {!Array<!proto.movie.Watch>}
 */
proto.movie.Detail.prototype.getWatchList = function() {
  return /** @type{!Array<!proto.movie.Watch>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.movie.Watch, 20));
};


/** @param {!Array<!proto.movie.Watch>} value */
proto.movie.Detail.prototype.setWatchList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.movie.Watch=} opt_value
 * @param {number=} opt_index
 * @return {!proto.movie.Watch}
 */
proto.movie.Detail.prototype.addWatch = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.movie.Watch, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.movie.Detail.prototype.clearWatchList = function() {
  this.setWatchList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.movie.Genre.prototype.toObject = function(opt_includeInstance) {
  return proto.movie.Genre.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.movie.Genre} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movie.Genre.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.movie.Genre}
 */
proto.movie.Genre.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.movie.Genre;
  return proto.movie.Genre.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.movie.Genre} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.movie.Genre}
 */
proto.movie.Genre.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.movie.Genre.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.movie.Genre.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.movie.Genre} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movie.Genre.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.movie.Genre.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.movie.Genre.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.movie.Genre.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.movie.Genre.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.movie.Votes.prototype.toObject = function(opt_includeInstance) {
  return proto.movie.Votes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.movie.Votes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movie.Votes.toObject = function(includeInstance, msg) {
  var f, obj = {
    average: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.movie.Votes}
 */
proto.movie.Votes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.movie.Votes;
  return proto.movie.Votes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.movie.Votes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.movie.Votes}
 */
proto.movie.Votes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAverage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.movie.Votes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.movie.Votes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.movie.Votes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movie.Votes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAverage();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional double average = 1;
 * @return {number}
 */
proto.movie.Votes.prototype.getAverage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.movie.Votes.prototype.setAverage = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional int32 count = 2;
 * @return {number}
 */
proto.movie.Votes.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.movie.Votes.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.movie.Video.prototype.toObject = function(opt_includeInstance) {
  return proto.movie.Video.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.movie.Video} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movie.Video.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    language: jspb.Message.getFieldWithDefault(msg, 2, ""),
    country: jspb.Message.getFieldWithDefault(msg, 3, ""),
    key: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    site: jspb.Message.getFieldWithDefault(msg, 6, ""),
    size: jspb.Message.getFieldWithDefault(msg, 7, 0),
    type: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.movie.Video}
 */
proto.movie.Video.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.movie.Video;
  return proto.movie.Video.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.movie.Video} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.movie.Video}
 */
proto.movie.Video.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSite(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSize(value);
      break;
    case 8:
      var value = /** @type {!proto.movie.Video.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.movie.Video.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.movie.Video.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.movie.Video} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movie.Video.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSite();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.movie.Video.Type = {
  TRAILER: 0,
  TEASER: 1,
  CLIP: 2,
  FEATURETTE: 3,
  BEHINDTHESCENES: 4,
  BLOOPERS: 5
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.movie.Video.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.movie.Video.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string language = 2;
 * @return {string}
 */
proto.movie.Video.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.movie.Video.prototype.setLanguage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string country = 3;
 * @return {string}
 */
proto.movie.Video.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.movie.Video.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string key = 4;
 * @return {string}
 */
proto.movie.Video.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.movie.Video.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.movie.Video.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.movie.Video.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string site = 6;
 * @return {string}
 */
proto.movie.Video.prototype.getSite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.movie.Video.prototype.setSite = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 size = 7;
 * @return {number}
 */
proto.movie.Video.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.movie.Video.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional Type type = 8;
 * @return {!proto.movie.Video.Type}
 */
proto.movie.Video.prototype.getType = function() {
  return /** @type {!proto.movie.Video.Type} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.movie.Video.Type} value */
proto.movie.Video.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.movie.Image.prototype.toObject = function(opt_includeInstance) {
  return proto.movie.Image.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.movie.Image} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movie.Image.toObject = function(includeInstance, msg) {
  var f, obj = {
    filepath: jspb.Message.getFieldWithDefault(msg, 1, ""),
    aspectratio: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    height: jspb.Message.getFieldWithDefault(msg, 3, 0),
    width: jspb.Message.getFieldWithDefault(msg, 4, 0),
    votes: (f = msg.getVotes()) && proto.movie.Votes.toObject(includeInstance, f),
    language: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.movie.Image}
 */
proto.movie.Image.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.movie.Image;
  return proto.movie.Image.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.movie.Image} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.movie.Image}
 */
proto.movie.Image.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilepath(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAspectratio(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWidth(value);
      break;
    case 5:
      var value = new proto.movie.Votes;
      reader.readMessage(value,proto.movie.Votes.deserializeBinaryFromReader);
      msg.setVotes(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.movie.Image.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.movie.Image.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.movie.Image} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movie.Image.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilepath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAspectratio();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getVotes();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.movie.Votes.serializeBinaryToWriter
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string filePath = 1;
 * @return {string}
 */
proto.movie.Image.prototype.getFilepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.movie.Image.prototype.setFilepath = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double aspectRatio = 2;
 * @return {number}
 */
proto.movie.Image.prototype.getAspectratio = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.movie.Image.prototype.setAspectratio = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int32 height = 3;
 * @return {number}
 */
proto.movie.Image.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.movie.Image.prototype.setHeight = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 width = 4;
 * @return {number}
 */
proto.movie.Image.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.movie.Image.prototype.setWidth = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional Votes votes = 5;
 * @return {?proto.movie.Votes}
 */
proto.movie.Image.prototype.getVotes = function() {
  return /** @type{?proto.movie.Votes} */ (
    jspb.Message.getWrapperField(this, proto.movie.Votes, 5));
};


/** @param {?proto.movie.Votes|undefined} value */
proto.movie.Image.prototype.setVotes = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.movie.Image.prototype.clearVotes = function() {
  this.setVotes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.movie.Image.prototype.hasVotes = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string language = 7;
 * @return {string}
 */
proto.movie.Image.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.movie.Image.prototype.setLanguage = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.movie.Watch.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.movie.Watch.prototype.toObject = function(opt_includeInstance) {
  return proto.movie.Watch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.movie.Watch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movie.Watch.toObject = function(includeInstance, msg) {
  var f, obj = {
    language: jspb.Message.getFieldWithDefault(msg, 1, ""),
    link: jspb.Message.getFieldWithDefault(msg, 2, ""),
    rentList: jspb.Message.toObjectList(msg.getRentList(),
    proto.movie.Watch.Provider.toObject, includeInstance),
    buyList: jspb.Message.toObjectList(msg.getBuyList(),
    proto.movie.Watch.Provider.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.movie.Watch}
 */
proto.movie.Watch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.movie.Watch;
  return proto.movie.Watch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.movie.Watch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.movie.Watch}
 */
proto.movie.Watch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    case 3:
      var value = new proto.movie.Watch.Provider;
      reader.readMessage(value,proto.movie.Watch.Provider.deserializeBinaryFromReader);
      msg.addRent(value);
      break;
    case 4:
      var value = new proto.movie.Watch.Provider;
      reader.readMessage(value,proto.movie.Watch.Provider.deserializeBinaryFromReader);
      msg.addBuy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.movie.Watch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.movie.Watch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.movie.Watch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movie.Watch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLink();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.movie.Watch.Provider.serializeBinaryToWriter
    );
  }
  f = message.getBuyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.movie.Watch.Provider.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.movie.Watch.Provider.prototype.toObject = function(opt_includeInstance) {
  return proto.movie.Watch.Provider.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.movie.Watch.Provider} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movie.Watch.Provider.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    priority: jspb.Message.getFieldWithDefault(msg, 2, 0),
    logopath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.movie.Watch.Provider}
 */
proto.movie.Watch.Provider.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.movie.Watch.Provider;
  return proto.movie.Watch.Provider.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.movie.Watch.Provider} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.movie.Watch.Provider}
 */
proto.movie.Watch.Provider.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogopath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.movie.Watch.Provider.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.movie.Watch.Provider.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.movie.Watch.Provider} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movie.Watch.Provider.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLogopath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.movie.Watch.Provider.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.movie.Watch.Provider.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 priority = 2;
 * @return {number}
 */
proto.movie.Watch.Provider.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.movie.Watch.Provider.prototype.setPriority = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string logoPath = 3;
 * @return {string}
 */
proto.movie.Watch.Provider.prototype.getLogopath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.movie.Watch.Provider.prototype.setLogopath = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.movie.Watch.Provider.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.movie.Watch.Provider.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string language = 1;
 * @return {string}
 */
proto.movie.Watch.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.movie.Watch.prototype.setLanguage = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string link = 2;
 * @return {string}
 */
proto.movie.Watch.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.movie.Watch.prototype.setLink = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Provider rent = 3;
 * @return {!Array<!proto.movie.Watch.Provider>}
 */
proto.movie.Watch.prototype.getRentList = function() {
  return /** @type{!Array<!proto.movie.Watch.Provider>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.movie.Watch.Provider, 3));
};


/** @param {!Array<!proto.movie.Watch.Provider>} value */
proto.movie.Watch.prototype.setRentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.movie.Watch.Provider=} opt_value
 * @param {number=} opt_index
 * @return {!proto.movie.Watch.Provider}
 */
proto.movie.Watch.prototype.addRent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.movie.Watch.Provider, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.movie.Watch.prototype.clearRentList = function() {
  this.setRentList([]);
};


/**
 * repeated Provider buy = 4;
 * @return {!Array<!proto.movie.Watch.Provider>}
 */
proto.movie.Watch.prototype.getBuyList = function() {
  return /** @type{!Array<!proto.movie.Watch.Provider>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.movie.Watch.Provider, 4));
};


/** @param {!Array<!proto.movie.Watch.Provider>} value */
proto.movie.Watch.prototype.setBuyList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.movie.Watch.Provider=} opt_value
 * @param {number=} opt_index
 * @return {!proto.movie.Watch.Provider}
 */
proto.movie.Watch.prototype.addBuy = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.movie.Watch.Provider, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.movie.Watch.prototype.clearBuyList = function() {
  this.setBuyList([]);
};


goog.object.extend(exports, proto.movie);
