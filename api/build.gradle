buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.4.30"
    id 'java'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'kotlin'

group 'com.bingematch'
version '0.0.1'

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
    maven { url 'https://kotlin.bintray.com/kotlinx' }
}

dependencies {
    implementation project(':model')
    implementation 'com.bingematch:model:0.0.1'

    implementation 'com.google.guava:guava:28.2-jre'

    //aws
    implementation 'software.amazon.awssdk:dynamodb:2.11.11'
//    implementation  'software.amazon.awssdk:ses:2.11.11'

    //etc
    implementation 'org.apache.commons:commons-lang3:3.8.1'

    //kotlin
    implementation 'io.kubernetes:client-java:10.0.0'

    //auth
    implementation 'at.favre.lib:bcrypt:0.9.0'
    implementation 'io.ktor:ktor-auth-jwt:1.3.1'

    //redis
    implementation 'io.lettuce:lettuce-core:6.0.2.RELEASE'

    //ktor
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-metrics:$ktor_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation "io.ktor:ktor-client-auth-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-json-jvm:$ktor_version"

    //jackson
    def jackson_version = '2.12.0'
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-protobuf:$jackson_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"
    implementation "io.ktor:ktor-client-jackson:$ktor_version"

    //proto
    implementation 'com.google.protobuf:protobuf-java-util:3.11.0'

    //client
    def fuel_version = '2.3.1'
    implementation "com.github.kittinunf.fuel:fuel:$fuel_version"
    implementation "com.github.kittinunf.fuel:fuel-jackson:$fuel_version"
//    implementation "com.github.kittinunf.fuel:fuel-coroutines:$fuel_version"

    //testing
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    implementation "org.junit.platform:junit-platform-launcher:1.7.1"
    implementation "io.ktor:ktor-server-tests:$ktor_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
    kotlinOptions.freeCompilerArgs = ["-Xallow-result-return-type"]
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
    kotlinOptions.freeCompilerArgs = ["-Xallow-result-return-type"]
}

shadowJar {
    manifest {
        attributes 'Main-Class': 'io.ktor.server.netty.EngineMain'
    }
}

//task uberJar(type: Jar) {
//    archiveClassifier = 'uber'
//
//    from sourceSets.main.output
//
//    dependsOn configurations.runtimeClasspath
//    from {
//        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
//    }
//}
